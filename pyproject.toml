[tool.poetry]
name = "disaloud"
version = "0.1.0"
description = ""
authors = []
license = "MIT"
readme = "README.md"
packages = [{ include = "disaloud" }]

[tool.poetry.dependencies]
python = "^3.11"
discord-py = { extras = ["voice"], version = "^2.3.2" }
sounddevice = "^0.4.6"
pydantic = "^2.4.2"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "*"
black = "*"
ruff = "*"
ipython = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [".venv", "venv"]

line-length = 88
fix = true

select = [
  "E", # pycodestyle
  "W", # pycodestyle
  "F", # Pyflakes
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  # "D", # flake8-docstrings
  "I", # isort
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "Q", # flake8-quotes
  "UP", # pyupgrade
  "PT", # flake8-pytest-style
  "RUF", # Ruff-specific rules
  "PTH", # flake8-use-pathlib
  "FA", # flake8-future-annotations
  "PIE", # flake8-pie
  # "TD", # flake8-todos
  "TRY", # tryceratops
  "FBT001", # flake8-boolean-trap
]

ignore = [
  # Line length regulated by black
  "E501",
  # pydocstyle: http://www.pydocstyle.org/en/stable/error_codes.html
  # numpy convention with a few additional lints
  "D107",
  "D203",
  "D212",
  "D401",
  "D402",
  "D415",
  "D416",
  # flake8-pytest-style:
  "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
  # flake8-simplify
  "SIM102", # Use a single `if` statement instead of nested `if` statements
  "SIM108", # Use ternary operator
  # ruff
  "RUF005", # unpack-instead-of-concatenating-to-collection-literal
  # pycodestyle
  # TODO: Remove errors below to further improve docstring linting
  # Ordered from most common to least common errors.
  "D105", # Missing docstring in magic method
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  # flake8-todos
  "TD002", # Missing author in TODO
  "TD003", # Missing issue link on the line following this TODO
  # tryceratops
  "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.pycodestyle]
max-doc-length = 88

[tool.ruff.isort]
split-on-trailing-comma = false

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.flake8-type-checking]
strict = true

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["F401"]
"tests/**/*.py" = ["D100", "D103", "B018", "FBT001"]
